/*
 * Copyright 2016-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = "Spring Cloud Open Service Broker Auto-Configuration"

apply plugin: "groovy"
apply plugin: "spring-cloud-contract"

contracts {
	packageWithBaseClasses = "org.springframework.cloud.servicebroker.autoconfigure.contract"
	testMode = "EXPLICIT"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudContractVersion}"
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
	}
}

dependencies {
	compile project(":spring-cloud-open-service-broker-core")
	compile("org.springframework.boot:spring-boot-starter")
	optional("org.springframework.boot:spring-boot-starter-web")

	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
	annotationProcessor("org.springframework.boot:spring-boot-autoconfigure-processor")

	testImplementation project(path: ":spring-cloud-open-service-broker-core", configuration: "testOutput")

	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.cloud:spring-cloud-starter-contract-verifier")
	testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
	testImplementation("org.junit.jupiter:junit-jupiter-api")
	testImplementation("org.mockito:mockito-core")
	testImplementation("org.hamcrest:java-hamcrest:2.0.0.0")
	testImplementation("org.assertj:assertj-core")
	testImplementation("org.apache.commons:commons-lang3")
}

test {
	useJUnitPlatform()
}

compileJava.dependsOn(processResources)
