import org.springframework.cloud.contract.verifier.config.TestFramework

/*
 * Copyright 2002-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
	dependencies {
		classpath("io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE")
		classpath("org.springframework.cloud:spring-cloud-contract-gradle-plugin:${springCloudContractVersion}")
	}
}

description = "Spring Cloud Open Service Broker Contract Tests"

apply plugin: "io.spring.dependency-management"
apply plugin: "groovy"
apply plugin: "spring-cloud-contract"

contracts {
	packageWithBaseClasses = "org.springframework.cloud.servicebroker.contract"
	testMode = "EXPLICIT"
	testFramework(TestFramework.JUNIT5)
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudContractVersion}"
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
	}
}

dependencies {
	testImplementation(project(":spring-cloud-starter-open-service-broker"))
	testImplementation("org.springframework.boot:spring-boot-starter-web")
	testImplementation("org.springframework.boot:spring-boot-starter-webflux")
	testImplementation(project(path: ":spring-cloud-open-service-broker-autoconfigure", configuration: "testOutput"))
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
	testImplementation("org.springframework.cloud:spring-cloud-starter-contract-verifier")
	testRuntimeOnly("javax.servlet:javax.servlet-api")
}
