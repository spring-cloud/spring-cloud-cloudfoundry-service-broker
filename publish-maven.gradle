// see https://docs.gradle.org/current/userguide/publishing_maven.html
apply plugin: 'maven-publish'

publishing {
	publications {
		mavenJava(MavenPublication) {
			suppressAllPomMetadataWarnings()
			from components.java
			pom {
				afterEvaluate {
					if (project.description == null || project.description.isEmpty()) {
						throw new InvalidUserDataException("A project description is required for publishing to maven central")
					}
					name = project.description
					description = project.description
				}
				url = "https://spring.io/projects/spring-cloud-open-service-broker"
				organization {
					name = "Pivotal Software, Inc."
					url = "https://spring.io"
				}
				licenses {
					license {
						name = "The Apache Software License, Version 2.0"
						url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
						distribution = "repo"
					}
				}
				scm {
					url = "https://github.com/spring-cloud/spring-cloud-open-service-broker"
					connection = "scm:git:git://github.com/spring-cloud/spring-cloud-open-service-broker"
					developerConnection = "scm:git:git://github.com/spring-cloud/spring-cloud-open-service-broker"
				}
				issueManagement {
					system = "GitHub"
					url = "https://github.com/spring-cloud/spring-cloud-open-service-broker/issues"
				}
				developers {
					developer {
						id = "sfrederick"
						name = "Scott Frederick"
						email = "sfrederick@pivotal.io"
					}
					developer {
						id = "royclarkson"
						name = "Roy Clarkson"
						email = "rclarkson@pivotal.io"
					}
				}
			}

			// Published pom will use fully-qualified dependency versions and no BOMs
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			pom.withXml {
				def pomNode = asNode()
				def dependencyManagementNode = pomNode.get('dependencyManagement')
				if (dependencyManagementNode) {
					pomNode.remove(dependencyManagementNode)
				}
			}
		}
	}
}
